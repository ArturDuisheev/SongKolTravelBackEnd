###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.9-alpine3.17 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip

COPY . .

RUN chmod +x ./builder.sh

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

RUN chmod +x ./builder.sh

#########
# FINAL #
#########

# pull official base image
FROM python:3.10.9-alpine3.17

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S back-end && adduser -S back-end -G back-end

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq libc-dev
RUN apk add --update alpine-sdk
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy sh scripts
COPY ./builder.sh .
RUN chmod +x $APP_HOME/builder.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R back-end:back-end $APP_HOME

# change to the app user
USER back-end